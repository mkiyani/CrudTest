using CrudTest.Application.Core.Models; using CrudTest.DataAccess; using Microsoft.AspNetCore.Builder; using Microsoft.AspNetCore.Hosting; using Microsoft.EntityFrameworkCore; using Microsoft.Extensions.Configuration; using Microsoft.Extensions.DependencyInjection; using Microsoft.Extensions.Hosting; using System; using CrudTest.DataAccess.Migration;  namespace KiyaniCrudTest {     public class Startup     {         public Startup(IConfiguration configuration)         {             Configuration = configuration;         }          public IConfiguration Configuration { get; }           public void ConfigureServices(IServiceCollection services)         {             services.AddScoped<ICustomerRepository, CustomerRepository>();             var connection = Configuration.GetConnectionString("DefaultConnection");
            //var connection = Configuration.GetConnectionString("CustomerDatabase"); //local
            services.AddDbContext<DBContext>(options => options.UseSqlServer(connection));             services.AddControllersWithViews();         }          public void Configure(IApplicationBuilder app, IWebHostEnvironment env)         {             var builder = new ConfigurationBuilder()                 .SetBasePath(env.ContentRootPath)                 .AddJsonFile("appsettings.json", optional: true, reloadOnChange: true)                 .AddJsonFile($"appsettings.{env.EnvironmentName}.json", optional: true);             if (env.IsDevelopment())             {                 app.UseDeveloperExceptionPage();             }             else             {                 app.UseExceptionHandler("/Home/Error");             }             app.UseStaticFiles();              app.UseRouting();              app.UseAuthorization();             PrepDB.PrepPoupulation(app);              app.UseEndpoints(endpoints =>             {                 endpoints.MapControllerRoute(                     name: "default",                     pattern: "{controller=Customers}/{action=Index}/{id?}");             });         }     } } 